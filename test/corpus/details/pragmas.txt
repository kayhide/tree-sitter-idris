================================================================================
Pragma default
================================================================================

%default total

--------------------------------------------------------------------------------

(idris
  (pragma
    (pragma_name)
    (pragma_arg
      (loname))))

================================================================================
Pragma inline 1
================================================================================

%inline -- %unsafe

--------------------------------------------------------------------------------

(idris
  (pragma_inline)
  (comment)
  (empty_file))

================================================================================
Pragma inline 2
================================================================================

public export %inline -- %unsafe
assert_linear : (1 f : a -> b) -> (1 val : a) -> b

--------------------------------------------------------------------------------

(idris
  (signature
    (visibility)
    (pragma_inline)
    (comment)
    (loname)
    (type_parens
      (literal
        (integer))
      (type_name
        (loname))
      (operator)
      (type_name
        (loname))
      (operator)
      (type_name
        (loname)))
    (operator)
    (type_parens
      (literal
        (integer))
      (type_name
        (loname))
      (operator)
      (type_name
        (loname)))
    (operator)
    (type_name
      (loname))))

================================================================================
Pragma inline 3
================================================================================

public export %inline %tcinline
(.) : (b -> c) -> (a -> b) -> a -> c

--------------------------------------------------------------------------------

(idris
  (signature
    (visibility)
    (pragma_inline)
    (pragma_tcinline)
    (operator)
    (type_parens
      (type_name
        (loname))
      (operator)
      (type_name
        (loname)))
    (operator)
    (type_parens
      (type_name
        (loname))
      (operator)
      (type_name
        (loname)))
    (operator)
    (type_name
      (loname))
    (operator)
    (type_name
      (loname))))

================================================================================
Pragma extern
================================================================================

%extern prim__getChar : (1 x : %World) -> IORes Char

--------------------------------------------------------------------------------

(idris
  (pragma_extern)
  (signature
    (loname)
    (type_parens
      (literal
        (integer))
      (type_name
        (loname))
      (operator)
      (pragma_world))
    (operator)
    (type_name
      (caname))
    (type_name
      (caname))))

================================================================================
Pragma transform 1
================================================================================

%transform "tailRecAppendSnocList" SnocList.(++) = SnocList.tailRecAppend

--------------------------------------------------------------------------------

(idris
  (pragma_transform
    (literal
      (string))
    (qualified_operator
      (module))
    (qualified_loname
      (module)
      (loname))))

================================================================================
Pragma transform 2
================================================================================

%transform "fastConcat" concat {t = List} {a = String} = fastConcat

--------------------------------------------------------------------------------

(idris
  (pragma_transform
    (literal
      (string))
    (loname)
    (exp_implicit_arg
      (loname)
      (exp_name
        (caname)))
    (exp_implicit_arg
      (loname)
      (exp_name
        (caname)))
    (loname)))

================================================================================
Pragma pair
================================================================================

%pair Pair fst snd

--------------------------------------------------------------------------------

(idris
  (pragma
    (pragma_name)
    (pragma_arg
      (caname))
    (pragma_arg
      (loname))
    (pragma_arg
      (loname))))

================================================================================
Pragma name 1
================================================================================

%name Equal prf

--------------------------------------------------------------------------------

(idris
  (pragma
    (pragma_name)
    (pragma_arg
      (caname))
    (pragma_arg
      (loname))))

================================================================================
Pragma name 2
================================================================================

%name List xs, ys, zs

--------------------------------------------------------------------------------

(idris
  (pragma
    (pragma_name)
    (pragma_arg
      (caname))
    (pragma_arg
      (loname))
    (comma)
    (pragma_arg
      (loname))
    (comma)
    (pragma_arg
      (loname))))

================================================================================
Pragma search 1
================================================================================

defaultString = %search

--------------------------------------------------------------------------------

(idris
  (function
    (lhs
      (funvar
        (loname)))
    (rhs
      (pragma_search))))

================================================================================
Pragma search 2
================================================================================

any = foldMap @{%search} @{Any}

--------------------------------------------------------------------------------

(idris
  (function
    (lhs
      (funvar
        (loname)))
    (rhs
      (exp_name
        (loname))
      (exp_explicit_impl
        (pragma_search))
      (exp_explicit_impl
        (implementation_name
          (caname))))))

================================================================================
Pragma foreign
================================================================================

%foreign "C:idris2_isNull, libidris2_support, idris_support.h"
         "javascript:lambda:x=>x===undefined||x===null?1:0"

--------------------------------------------------------------------------------

(idris
  (pragma
    (pragma_name)
    (pragma_arg
      (literal
        (string)))
    (pragma_arg
      (literal
        (string)))))

================================================================================
Pragma allow_overloads
================================================================================

%allow_overloads pure
%allow_overloads (<*)
%allow_overloads (*>)

--------------------------------------------------------------------------------

(idris
  (pragma
    (pragma_name)
    (pragma_arg
      (loname)))
  (pragma
    (pragma_name)
    (pragma_arg
      (operator)))
  (pragma
    (pragma_name)
    (pragma_arg
      (operator))))

================================================================================
Pragma World 1
================================================================================

MkIORes : (result : a) -> (1 x : %World) -> IORes a

--------------------------------------------------------------------------------

(idris
  (signature
    (caname)
    (type_parens
      (type_name
        (loname))
      (operator)
      (type_name
        (loname)))
    (operator)
    (type_parens
      (literal
        (integer))
      (type_name
        (loname))
      (operator)
      (pragma_world))
    (operator)
    (type_name
      (caname))
    (type_name
      (loname))))

================================================================================
Pragma World 2
================================================================================

unsafeCreateWorld f = f %MkWorld

--------------------------------------------------------------------------------

(idris
  (function
    (lhs
      (funvar
        (loname)
        (patterns
          (pat_name
            (loname)))))
    (rhs
      (exp_name
        (loname))
      (pragma_mkworld))))

================================================================================
Pragma World 3
================================================================================

unsafeDestroyWorld %MkWorld x = x

--------------------------------------------------------------------------------

(idris
  (function
    (lhs
      (funvar
        (loname)
        (patterns
          (pragma_mkworld)
          (pat_name
            (loname)))))
    (rhs
      (exp_name
        (loname)))))

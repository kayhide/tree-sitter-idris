================================================================================
Pragma default
================================================================================

%default total

--------------------------------------------------------------------------------

(idris
  (pragma
    (pragma_name)
    (pragma_arg
      (variable))))

================================================================================
Pragma inline 1
================================================================================

%inline -- %unsafe

--------------------------------------------------------------------------------

(idris
  (pragma_inline)
  (comment)
  (empty_file))

================================================================================
Pragma inline 2
================================================================================

public export %inline -- %unsafe
assert_linear : (1 f : a -> b) -> (1 val : a) -> b

--------------------------------------------------------------------------------

(idris
  (signature
    (visibility)
    (pragma_inline)
    (comment)
    (variable)
    (type_infix
      (type_name
        (annotated_type_variable
          (quantity)
          (type_variable)
          (type_infix
            (type_name
              (type_variable))
            (operator)
            (type_name
              (type_variable)))))
      (operator)
      (type_infix
        (type_name
          (annotated_type_variable
            (quantity)
            (type_variable)
            (type_name
              (type_variable))))
        (operator)
        (type_name
          (type_variable))))))

================================================================================
Pragma inline 3
================================================================================

public export %inline %tcinline
(.) : (b -> c) -> (a -> b) -> a -> c

--------------------------------------------------------------------------------

(idris
  (signature
    (visibility)
    (pragma_inline)
    (pragma_tcinline)
    (operator)
    (type_infix
      (type_parens
        (type_infix
          (type_name
            (type_variable))
          (operator)
          (type_name
            (type_variable))))
      (operator)
      (type_infix
        (type_parens
          (type_infix
            (type_name
              (type_variable))
            (operator)
            (type_name
              (type_variable))))
        (operator)
        (type_infix
          (type_name
            (type_variable))
          (operator)
          (type_name
            (type_variable)))))))

================================================================================
Pragma pair
================================================================================

%pair Pair fst snd

--------------------------------------------------------------------------------

(idris
  (pragma
    (pragma_name)
    (pragma_arg
      (constructor))
    (pragma_arg
      (variable))
    (pragma_arg
      (variable))))

================================================================================
Pragma name 1
================================================================================

%name Equal prf

--------------------------------------------------------------------------------

(idris
  (pragma
    (pragma_name)
    (pragma_arg
      (constructor))
    (pragma_arg
      (variable))))

================================================================================
Pragma name 2
================================================================================

%name List xs, ys, zs

--------------------------------------------------------------------------------

(idris
  (pragma
    (pragma_name)
    (pragma_arg
      (constructor))
    (pragma_arg
      (variable))
    (comma)
    (pragma_arg
      (variable))
    (comma)
    (pragma_arg
      (variable))))

================================================================================
Pragma search 1
================================================================================

defaultString = %search

--------------------------------------------------------------------------------

(idris
  (function
    (variable)
    (pragma_search)))

================================================================================
Pragma search 2
================================================================================

any = foldMap @{%search} @{Any}

--------------------------------------------------------------------------------

(idris
  (function
    (variable)
    (exp_apply
      (exp_name
        (variable))
      (exp_explicit_impl
        (pragma_search))
      (exp_explicit_impl
        (implementation_name)))))

================================================================================
Pragma foreign
================================================================================

%foreign "C:idris2_isNull, libidris2_support, idris_support.h"
         "javascript:lambda:x=>x===undefined||x===null?1:0"

--------------------------------------------------------------------------------

(idris
  (pragma
    (pragma_name)
    (pragma_arg
      (literal
        (string)))
    (pragma_arg
      (literal
        (string)))))

================================================================================
Pragma foreign
================================================================================

%allow_overloads pure
%allow_overloads (<*)
%allow_overloads (*>)

--------------------------------------------------------------------------------

(idris
  (pragma
    (pragma_name)
    (pragma_arg
      (variable)))
  (pragma
    (pragma_name)
    (pragma_arg
      (operator)))
  (pragma
    (pragma_name)
    (pragma_arg
      (operator))))

================================================================================
Simple line (indent and dedent)
================================================================================

f x = let
        y = x
      in y

--------------------------------------------------------------------------------

(idris
  (function
    (lhs
      (funvar
        (loname)
        (patterns
          (pat_name
            (loname)))))
    (rhs
      (exp_let_in
        (declarations
          (lhs
            (pat_name
              (loname)))
          (rhs
            (exp_name
              (loname))))
        (in
          (exp_name
            (loname)))))))

================================================================================
Simple line (indent only)
================================================================================

f x = let
        y = x in y

--------------------------------------------------------------------------------

(idris
  (function
    (lhs
      (funvar
        (loname)
        (patterns
          (pat_name
            (loname)))))
    (rhs
      (exp_let_in
        (declarations
          (lhs
            (pat_name
              (loname)))
          (rhs
            (exp_name
              (loname))))
        (in
          (exp_name
            (loname)))))))

================================================================================
Simple line (dedent only)
================================================================================

f x = let y = x
        in y

--------------------------------------------------------------------------------

(idris
  (function
    (lhs
      (funvar
        (loname)
        (patterns
          (pat_name
            (loname)))))
    (rhs
      (exp_let_in
        (declarations
          (lhs
            (pat_name
              (loname)))
          (rhs
            (exp_name
              (loname))))
        (in
          (exp_name
            (loname)))))))

================================================================================
Single line (on the same line)
================================================================================

f x = let y = x in y

--------------------------------------------------------------------------------

(idris
  (function
    (lhs
      (funvar
        (loname)
        (patterns
          (pat_name
            (loname)))))
    (rhs
      (exp_let_in
        (declarations
          (lhs
            (pat_name
              (loname)))
          (rhs
            (exp_name
              (loname))))
        (in
          (exp_name
            (loname)))))))

================================================================================
Single line (dangling tail)
================================================================================

f x = let y = x in
    y

--------------------------------------------------------------------------------

(idris
  (function
    (lhs
      (funvar
        (loname)
        (patterns
          (pat_name
            (loname)))))
    (rhs
      (exp_let_in
        (declarations
          (lhs
            (pat_name
              (loname)))
          (rhs
            (exp_name
              (loname))))
        (in
          (exp_name
            (loname)))))))

================================================================================
Multiline (indent and dedent)
================================================================================

f x = let
          y = x
          y = x
      in y

--------------------------------------------------------------------------------

(idris
  (function
    (lhs
      (funvar
        (loname)
        (patterns
          (pat_name
            (loname)))))
    (rhs
      (exp_let_in
        (declarations
          (lhs
            (pat_name
              (loname)))
          (rhs
            (exp_name
              (loname)))
          (lhs
            (pat_name
              (loname)))
          (rhs
            (exp_name
              (loname))))
        (in
          (exp_name
            (loname)))))))

================================================================================
Multiline (indent only)
================================================================================

f x = let
          y = x
          y = x in y

--------------------------------------------------------------------------------

(idris
  (function
    (lhs
      (funvar
        (loname)
        (patterns
          (pat_name
            (loname)))))
    (rhs
      (exp_let_in
        (declarations
          (lhs
            (pat_name
              (loname)))
          (rhs
            (exp_name
              (loname)))
          (lhs
            (pat_name
              (loname)))
          (rhs
            (exp_name
              (loname))))
        (in
          (exp_name
            (loname)))))))

================================================================================
Multiline (dedent only)
================================================================================

f x = let y = x
          y = x
      in y

--------------------------------------------------------------------------------

(idris
  (function
    (lhs
      (funvar
        (loname)
        (patterns
          (pat_name
            (loname)))))
    (rhs
      (exp_let_in
        (declarations
          (lhs
            (pat_name
              (loname)))
          (rhs
            (exp_name
              (loname)))
          (lhs
            (pat_name
              (loname)))
          (rhs
            (exp_name
              (loname))))
        (in
          (exp_name
            (loname)))))))

================================================================================
Multiline (dangling tail)
================================================================================

f x = let y = x
          y = x in
    y

--------------------------------------------------------------------------------

(idris
  (function
    (lhs
      (funvar
        (loname)
        (patterns
          (pat_name
            (loname)))))
    (rhs
      (exp_let_in
        (declarations
          (lhs
            (pat_name
              (loname)))
          (rhs
            (exp_name
              (loname)))
          (lhs
            (pat_name
              (loname)))
          (rhs
            (exp_name
              (loname))))
        (in
          (exp_name
            (loname)))))))

================================================================================
Telescope single line I
================================================================================

f x = let y = x in let y = x in y

--------------------------------------------------------------------------------

(idris
  (function
    (lhs
      (funvar
        (loname)
        (patterns
          (pat_name
            (loname)))))
    (rhs
      (exp_let_in
        (declarations
          (lhs
            (pat_name
              (loname)))
          (rhs
            (exp_name
              (loname))))
        (in
          (exp_let_in
            (declarations
              (lhs
                (pat_name
                  (loname)))
              (rhs
                (exp_name
                  (loname))))
            (in
              (exp_name
                (loname)))))))))

================================================================================
Telescope single line II
================================================================================

f x = let y = x in
        let y = x in y

--------------------------------------------------------------------------------

(idris
  (function
    (lhs
      (funvar
        (loname)
        (patterns
          (pat_name
            (loname)))))
    (rhs
      (exp_let_in
        (declarations
          (lhs
            (pat_name
              (loname)))
          (rhs
            (exp_name
              (loname))))
        (in
          (exp_let_in
            (declarations
              (lhs
                (pat_name
                  (loname)))
              (rhs
                (exp_name
                  (loname))))
            (in
              (exp_name
                (loname)))))))))

================================================================================
Telescope multi line I
================================================================================

f x = let y = x
          y = x in
     let y = x in y

--------------------------------------------------------------------------------

(idris
  (function
    (lhs
      (funvar
        (loname)
        (patterns
          (pat_name
            (loname)))))
    (rhs
      (exp_let_in
        (declarations
          (lhs
            (pat_name
              (loname)))
          (rhs
            (exp_name
              (loname)))
          (lhs
            (pat_name
              (loname)))
          (rhs
            (exp_name
              (loname))))
        (in
          (exp_let_in
            (declarations
              (lhs
                (pat_name
                  (loname)))
              (rhs
                (exp_name
                  (loname))))
            (in
              (exp_name
                (loname)))))))))

================================================================================
Pattern match
================================================================================

_ = let (a, b) = x in b

--------------------------------------------------------------------------------

(idris
  (function
    (lhs
      (wildcard))
    (rhs
      (exp_let_in
        (declarations
          (lhs
            (pat_parens
              (pat_name
                (loname))
              (tuple_operator)
              (pat_name
                (loname))))
          (rhs
            (exp_name
              (loname))))
        (in
          (exp_name
            (loname)))))))

================================================================================
Pattern match alt
================================================================================

_=
  let Just (l ::: ls) = List.toList1' $ mapMaybe fromColist xs
        | Nothing => []
  in zig (l ::: []) (fromList ls)

--------------------------------------------------------------------------------

(idris
  (function
    (lhs
      (wildcard))
    (rhs
      (exp_let_in
        (declarations
          (lhs
            (pat_name
              (caname))
            (pat_parens
              (pat_name
                (loname))
              (pat_op)
              (pat_name
                (loname))))
          (rhs
            (exp_name
              (qualified_loname
                (module)
                (loname)))
            (exp_op)
            (exp_name
              (loname))
            (exp_name
              (loname))
            (exp_name
              (loname))))
        (bind_alt
          (pat_name
            (caname))
          (exp_list))
        (in
          (exp_name
            (loname))
          (exp_parens
            (exp_name
              (loname))
            (exp_op)
            (exp_list))
          (exp_parens
            (exp_name
              (loname))
            (exp_name
              (loname))))))))

================================================================================
Single line without body
================================================================================

f x = do
  let y = x

--------------------------------------------------------------------------------

(idris
  (function
    (lhs
      (funvar
        (loname)
        (patterns
          (pat_name
            (loname)))))
    (rhs
      (exp_do
        (statement
          (let
            (declarations
              (lhs
                (pat_name
                  (loname)))
              (rhs
                (exp_name
                  (loname))))))))))

================================================================================
Single line without body (indent)
================================================================================

f x = do
  let
    y = x

--------------------------------------------------------------------------------

(idris
  (function
    (lhs
      (funvar
        (loname)
        (patterns
          (pat_name
            (loname)))))
    (rhs
      (exp_do
        (statement
          (let
            (declarations
              (lhs
                (pat_name
                  (loname)))
              (rhs
                (exp_name
                  (loname))))))))))

================================================================================
Multiline without body
================================================================================

f x = do let y = x
             y = x

--------------------------------------------------------------------------------

(idris
  (function
    (lhs
      (funvar
        (loname)
        (patterns
          (pat_name
            (loname)))))
    (rhs
      (exp_do
        (statement
          (let
            (declarations
              (lhs
                (pat_name
                  (loname)))
              (rhs
                (exp_name
                  (loname)))
              (lhs
                (pat_name
                  (loname)))
              (rhs
                (exp_name
                  (loname))))))))))

================================================================================
Multiline without body (indent)
================================================================================

f x = do
        let
          y = x
          y = x

--------------------------------------------------------------------------------

(idris
  (function
    (lhs
      (funvar
        (loname)
        (patterns
          (pat_name
            (loname)))))
    (rhs
      (exp_do
        (statement
          (let
            (declarations
              (lhs
                (pat_name
                  (loname)))
              (rhs
                (exp_name
                  (loname)))
              (lhs
                (pat_name
                  (loname)))
              (rhs
                (exp_name
                  (loname))))))))))

================================================================================
Pattern match without body
================================================================================

_ = do
  let
    (a, b) = x

--------------------------------------------------------------------------------

(idris
  (function
    (lhs
      (wildcard))
    (rhs
      (exp_do
        (statement
          (let
            (declarations
              (lhs
                (pat_parens
                  (pat_name
                    (loname))
                  (tuple_operator)
                  (pat_name
                    (loname))))
              (rhs
                (exp_name
                  (loname))))))))))

================================================================================
Module 1
================================================================================

module Foo

--------------------------------------------------------------------------------

(idris
  (module
    (caname)))

================================================================================
Module 2
================================================================================

module Foo.Bar

--------------------------------------------------------------------------------

(idris
  (module
    (qualified_caname
      (caname)
      (caname))))

================================================================================
Export function
================================================================================

export
f : _

--------------------------------------------------------------------------------

(idris
  (signature
    (visibility)
    (loname)
    (colon)
    (wildcard)))

================================================================================
Public export function
================================================================================

public export
f : _

--------------------------------------------------------------------------------

(idris
  (signature
    (visibility)
    (loname)
    (colon)
    (wildcard)))

================================================================================
Export data
================================================================================

export
data X = _

--------------------------------------------------------------------------------

(idris
  (data
    (visibility)
    (data_name)
    (wildcard)))

================================================================================
Public export data
================================================================================

public export
data X = _

--------------------------------------------------------------------------------

(idris
  (data
    (visibility)
    (data_name)
    (wildcard)))

================================================================================
Export interface
================================================================================

export
interface I

--------------------------------------------------------------------------------

(idris
  (interface
    (visibility)
    (interface_head
      (interface_name
        (caname)))))

================================================================================
Public export interface
================================================================================

public export
interface I

--------------------------------------------------------------------------------

(idris
  (interface
    (visibility)
    (interface_head
      (interface_name
        (caname)))))

================================================================================
Private fixity
================================================================================

private
infix 5 +

--------------------------------------------------------------------------------

(idris
  (fixity
    (visibility)
    (integer)
    (operator)))

================================================================================
Export fixity
================================================================================

export
infix 6 *

--------------------------------------------------------------------------------

(idris
  (fixity
    (visibility)
    (integer)
    (operator)))

================================================================================
Public export fixity
================================================================================

public export
infix 7 ^

--------------------------------------------------------------------------------

(idris
  (fixity
    (visibility)
    (integer)
    (operator)))

================================================================================
Import
================================================================================

import B

--------------------------------------------------------------------------------

(idris
  (import
    (caname)))

================================================================================
Re-export
================================================================================

import public C

--------------------------------------------------------------------------------

(idris
  (import
    (caname)))

================================================================================
Renaming imports 1
================================================================================

import Data.List as L

--------------------------------------------------------------------------------

(idris
  (import
    (qualified_caname
      (caname)
      (caname))
    (caname)))

================================================================================
Renaming imports 2
================================================================================

import public Books.Hardback as Books

--------------------------------------------------------------------------------

(idris
  (import
    (qualified_caname
      (caname)
      (caname))
    (caname)))

================================================================================
Explicit Namespaces
================================================================================

namespace X
  export
  test : Int -> Int

--------------------------------------------------------------------------------

(idris
  (namespace
    (caname)
    (namespace_body
      (signature
        (visibility)
        (loname)
        (colon)
        (exp_name
          (caname))
        (arrow_separator)
        (exp_name
          (caname))))))

================================================================================
Explicit namespaces inside functions
================================================================================

withNSInside = g where
  namespace X
    export
    g : Nat

----

(idris
  (function
    (lhs
      (funvar
        (loname)))
    (rhs
      (exp_name
        (loname)))
    (where)
    (declarations
      (namespace
        (caname)
        (namespace_body
          (signature
            (visibility)
            (loname)
            (colon)
            (exp_name
              (caname))))))))

================================================================================
Parameterised blocks 1
================================================================================

parameters (x : Nat, y : Nat)
  addAll : Nat -> Nat

--------------------------------------------------------------------------------

(idris
  (parameters
    (type_parens
      (type_var
        (loname)
        (colon)
        (exp_name
          (caname)))
      (comma)
      (type_var
        (loname)
        (colon)
        (exp_name
          (caname))))
    (parameters_body
      (signature
        (loname)
        (colon)
        (exp_name
          (caname))
        (arrow_separator)
        (exp_name
          (caname))))))

================================================================================
Parameterised blocks 2
================================================================================

parameters (y : Nat, xs : Vect x a)
  data Vects : Type -> Type where
    MkVects : Vect y a -> Vects a

  append : Vects a -> Vect (x + y) a

--------------------------------------------------------------------------------

(idris
  (parameters
    (type_parens
      (type_var
        (loname)
        (colon)
        (exp_name
          (caname)))
      (comma)
      (type_var
        (loname)
        (colon)
        (exp_name
          (caname))
        (exp_name
          (loname))
        (exp_name
          (loname))))
    (parameters_body
      (data
        (data_name)
        (type_signature
          (colon)
          (exp_name
            (caname))
          (arrow_separator)
          (exp_name
            (caname)))
        (where)
        (data_body
          (constructor_signature
            (caname)
            (type_signature
              (colon)
              (exp_name
                (caname))
              (exp_name
                (loname))
              (exp_name
                (loname))
              (arrow_separator)
              (exp_name
                (caname))
              (exp_name
                (loname)))))))
    (parameters_body
      (signature
        (loname)
        (colon)
        (exp_name
          (caname))
        (exp_name
          (loname))
        (arrow_separator)
        (exp_name
          (caname))
        (exp_parens
          (exp_name
            (loname))
          (operator)
          (exp_name
            (loname)))
        (exp_name
          (loname))))))

================================================================================
Parameterised blocks with quantitized arguments
================================================================================

parameters (0 f : Type -> Type)

--------------------------------------------------------------------------------

(idris
  (parameters
    (type_parens
      (type_var
        (quantity)
        (loname)
        (colon)
        (exp_name
          (caname))
        (arrow_separator)
        (exp_name
          (caname))))))

================================================================================
Parameterised block with implicit args
================================================================================

parameters {auto eqTTImp : Eq TTImp}
  _ = _

--------------------------------------------------------------------------------

(idris
  (parameters
    (type_braces
      (auto)
      (exp_name
        (loname))
      (colon)
      (exp_name
        (caname))
      (exp_name
        (caname)))
    (parameters_body
      (function
        (lhs
          (wildcard))
        (rhs
          (wildcard))))))

================================================================================
Parameters with line break
================================================================================

parameters {a : A} (b : B)
  (c : C)
  x : X

--------------------------------------------------------------------------------

(idris
  (parameters
    (type_braces
      (exp_name
        (loname))
      (colon)
      (exp_name
        (caname)))
    (type_parens
      (type_var
        (loname)
        (colon)
        (exp_name
          (caname))))
    (type_parens
      (type_var
        (loname)
        (colon)
        (exp_name
          (caname))))
    (parameters_body
      (signature
        (loname)
        (colon)
        (exp_name
          (caname))))))

================================================================================
Parameters with line break and implementation
================================================================================

parameters {a : A} 
  {b : B}
  {x : X} -> Y x where

--------------------------------------------------------------------------------

(idris
  (parameters
    (type_braces
      (exp_name
        (loname))
      (colon)
      (exp_name
        (caname)))
    (type_braces
      (exp_name
        (loname))
      (colon)
      (exp_name
        (caname)))
    (parameters_body
      (implementation
        (implementation_head
          (constraints
            (type_braces
              (exp_name
                (loname))
              (colon)
              (exp_name
                (caname)))
            (arrow_separator))
          (interface_name
            (caname))
          (exp_name
            (loname)))
        (implementation_body
          (where))))))

================================================================================
Parameterised blocks with using
================================================================================

using (k : Nat)

--------------------------------------------------------------------------------

(idris
  (parameters
    (type_parens
      (type_var
        (loname)
        (colon)
        (exp_name
          (caname))))))

================================================================================
with rule 1
================================================================================

filter p (x :: xs) with (filter p xs)
  filter p (x :: xs) | ( _ ** xs' ) = _

--------------------------------------------------------------------------------

(idris
  (function
    (lhs
      (variable)
      (patterns
        (pat_name
          (variable))
        (pat_tuple
          (pat_infix
            (pat_name
              (variable))
            (operator)
            (pat_name
              (variable))))))
    (with
      (exp_parens
        (exp_apply
          (exp_name
            (variable))
          (exp_name
            (variable))
          (exp_name
            (variable))))
      (function
        (lhs
          (patterns
            (pat_name
              (variable))
            (pat_name
              (variable))
            (pat_tuple
              (pat_infix
                (pat_name
                  (variable))
                (operator)
                (pat_name
                  (variable)))))
          (operator)
          (patterns
            (pat_tuple
              (pat_infix
                (pat_wildcard)
                (operator)
                (pat_name
                  (variable))))))
        (rhs
          (wildcard))))))

================================================================================
with rule 2
================================================================================

filter p (x :: xs) with (filter p xs)
  _ | ( _ ** xs' ) = _

--------------------------------------------------------------------------------

(idris
  (function
    (lhs
      (variable)
      (patterns
        (pat_name
          (variable))
        (pat_tuple
          (pat_infix
            (pat_name
              (variable))
            (operator)
            (pat_name
              (variable))))))
    (with
      (exp_parens
        (exp_apply
          (exp_name
            (variable))
          (exp_name
            (variable))
          (exp_name
            (variable))))
      (function
        (lhs
          (wildcard)
          (with_pat
            (pat_tuple
              (pat_infix
                (pat_wildcard)
                (operator)
                (pat_name
                  (variable))))))
        (rhs
          (wildcard))))))

================================================================================
with rule 3
================================================================================

foo n m with (n + 1)
  foo _ m | 2 with (m + 1)
    foo _ _ | 2 | 3 = True
    foo _ _ | 2 | _ = False
  foo _ _ | _ = False

--------------------------------------------------------------------------------

(idris
  (function
    (lhs
      (variable)
      (patterns
        (pat_name
          (variable))
        (pat_name
          (variable))))
    (with
      (exp_parens
        (exp_name
          (variable))
        (operator)
        (exp_literal
          (integer)))
      (function
        (lhs
          (patterns
            (pat_name
              (variable))
            (pat_wildcard)
            (pat_name
              (variable)))
          (operator)
          (patterns
            (pat_literal
              (integer))))
        (with
          (exp_parens
            (exp_name
              (variable))
            (operator)
            (exp_literal
              (integer)))
          (function
            (lhs
              (patterns
                (pat_name
                  (variable))
                (pat_wildcard)
                (pat_wildcard))
              (operator)
              (patterns
                (pat_literal
                  (integer)))
              (with_pat
                (pat_literal
                  (integer))))
            (rhs
              (exp_name
                (constructor))))
          (function
            (lhs
              (patterns
                (pat_name
                  (variable))
                (pat_wildcard)
                (pat_wildcard))
              (operator)
              (patterns
                (pat_literal
                  (integer)))
              (with_pat
                (pat_wildcard)))
            (rhs
              (exp_name
                (constructor))))))
      (function
        (lhs
          (patterns
            (pat_name
              (variable))
            (pat_wildcard)
            (pat_wildcard))
          (operator)
          (patterns
            (pat_wildcard)))
        (rhs
          (exp_name
            (constructor)))))))

================================================================================
with rule 4
================================================================================

foo n m with (n + 1) | (m + 1)
  _ | 2 | 3 = True
  _ | _ | _ = False

--------------------------------------------------------------------------------

(idris
  (function
    (lhs
      (patterns
        (pat_name
          (variable))
        (pat_name
          (variable))
        (pat_name
          (variable))
        (pat_name
          (variable))
        (pat_tuple
          (pat_infix
            (pat_name
              (variable))
            (operator)
            (pat_literal
              (integer)))))
      (operator)
      (patterns
        (pat_tuple
          (pat_infix
            (pat_name
              (variable))
            (operator)
            (pat_literal
              (integer))))
        (pat_wildcard))
      (with_pat
        (pat_literal
          (integer)))
      (with_pat
        (pat_literal
          (integer))))
    (rhs
      (exp_apply
        (exp_name
          (constructor))
        (wildcard))
      (operator)
      (wildcard)
      (operator)
      (wildcard)
      (operator)
      (exp_name
        (constructor)))))

================================================================================
Declaration Order and mutual blocks
================================================================================

mutual
  even : Nat -> Bool
  even Z = True
  even (S k) = odd k

  odd : Nat -> Bool
  odd Z = False
  odd (S k) = even k

--------------------------------------------------------------------------------

(idris
  (mutual
    (mutual_body
      (signature
        (loname)
        (type_name
          (caname))
        (operator)
        (type_name
          (caname)))
      (function
        (lhs
          (funvar
            (loname)
            (patterns
              (pat_name
                (caname)))))
        (rhs
          (exp_name
            (caname))))
      (function
        (lhs
          (funvar
            (loname)
            (patterns
              (pat_tuple
                (pat_apply
                  (caname)
                  (pat_name
                    (loname)))))))
        (rhs
          (exp_name
            (loname))
          (exp_name
            (loname))))
      (signature
        (loname)
        (type_name
          (caname))
        (operator)
        (type_name
          (caname)))
      (function
        (lhs
          (funvar
            (loname)
            (patterns
              (pat_name
                (caname)))))
        (rhs
          (exp_name
            (caname))))
      (function
        (lhs
          (funvar
            (loname)
            (patterns
              (pat_tuple
                (pat_apply
                  (caname)
                  (pat_name
                    (loname)))))))
        (rhs
          (exp_name
            (loname))
          (exp_name
            (loname)))))))

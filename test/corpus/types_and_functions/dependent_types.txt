================================================================================
Dependent Types
================================================================================

mkSingle : (x : Bool) -> isSingleton x
mkSingle False = []

--------------------------------------------------------------------------------

(idris
  (signature
    (loname)
    (type_infix
      (type_parens
        (type_infix
          (type_name
            (loname))
          (operator)
          (type_name
            (caname))))
      (operator)
      (type_apply
        (type_name
          (loname))
        (type_name
          (loname)))))
  (function
    (lhs
      (funvar
        (loname)
        (patterns
          (pat_name
            (caname)))))
    (rhs
      (exp_list))))

================================================================================
Implicit Arguments 1
================================================================================

index : forall a, n. Fin n -> Vect n a -> a

--------------------------------------------------------------------------------

(idris
  (signature
    (loname)
    (type_infix
      (forall
        (type_variable)
        (comma)
        (type_variable))
      (type_apply
        (type_name
          (caname))
        (type_name
          (loname)))
      (operator)
      (type_infix
        (type_apply
          (type_name
            (caname))
          (type_name
            (loname))
          (type_name
            (loname)))
        (operator)
        (type_name
          (loname))))))

================================================================================
Implicit Arguments 2
================================================================================

index : {a : Type} -> {n : Nat} -> Fin n -> Vect n a -> a

--------------------------------------------------------------------------------

(idris
  (signature
    (loname)
    (type_infix
      (type_braces
        (implicit_arg
          (type_name
            (loname)))
        (type_name
          (caname)))
      (operator)
      (type_infix
        (type_braces
          (implicit_arg
            (type_name
              (loname)))
          (type_name
            (caname)))
        (operator)
        (type_infix
          (type_apply
            (type_name
              (caname))
            (type_name
              (loname)))
          (operator)
          (type_infix
            (type_apply
              (type_name
                (caname))
              (type_name
                (loname))
              (type_name
                (loname)))
            (operator)
            (type_name
              (loname))))))))

================================================================================
Implicit Arguments 3
================================================================================

_ = index {a=Int} {n=2} FZ (2 :: 3 :: Nil)

--------------------------------------------------------------------------------

(idris
  (function
    (lhs
      (wildcard))
    (rhs
      (exp_apply
        (exp_name
          (loname))
        (exp_implicit_arg
          (loname)
          (exp_name
            (caname)))
        (exp_implicit_arg
          (loname)
          (exp_literal
            (integer)))
        (exp_name
          (caname))
        (exp_parens
          (exp_apply
            (exp_literal
              (integer))
            (exp_op)
            (exp_literal
              (integer))
            (exp_op)
            (exp_name
              (caname))))))))

================================================================================
Implicit Arguments 4
================================================================================

index : (i : Fin n) -> (xs : Vect n a) -> a

--------------------------------------------------------------------------------

(idris
  (signature
    (loname)
    (type_infix
      (type_parens
        (type_infix
          (type_name
            (loname))
          (operator)
          (type_apply
            (type_name
              (caname))
            (type_name
              (loname)))))
      (operator)
      (type_infix
        (type_parens
          (type_infix
            (type_name
              (loname))
            (operator)
            (type_apply
              (type_name
                (caname))
              (type_name
                (loname))
              (type_name
                (loname)))))
        (operator)
        (type_name
          (loname))))))

================================================================================
Auto Implicit Arguments
================================================================================

head : (xs : List a) -> {auto p : isCons xs = True} -> a
 
--------------------------------------------------------------------------------

(idris
  (signature
    (loname)
    (type_infix
      (type_parens
        (type_infix
          (type_name
            (loname))
          (operator)
          (type_apply
            (type_name
              (caname))
            (type_name
              (loname)))))
      (operator)
      (type_infix
        (type_braces
          (implicit_arg
            (auto)
            (type_name
              (loname)))
          (type_infix
            (type_apply
              (type_name
                (loname))
              (type_name
                (loname)))
            (operator)
            (type_name
              (caname))))
        (operator)
        (type_name
          (loname))))))

================================================================================
Default Implicit Arguments
================================================================================

fibonacci : {default 0 lag : Nat} -> {default 1 lead : Nat} -> (n : Nat) -> Nat
 
--------------------------------------------------------------------------------

(idris
  (signature
    (loname)
    (type_infix
      (type_braces
        (implicit_arg
          (default
            (exp_literal
              (integer)))
          (type_name
            (loname)))
        (type_name
          (caname)))
      (operator)
      (type_infix
        (type_braces
          (implicit_arg
            (default
              (exp_literal
                (integer)))
            (type_name
              (loname)))
          (type_name
            (caname)))
        (operator)
        (type_infix
          (type_parens
            (type_infix
              (type_name
                (loname))
              (operator)
              (type_name
                (caname))))
          (operator)
          (type_name
            (caname)))))))
